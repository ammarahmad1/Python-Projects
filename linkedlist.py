# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IlrkxLP3Mz5_4LDliAFANfS0WILi9wUP
"""

#10/31/2021

class node:
  def __init__(self, data=None):
    self.data = data
    self.next = None
  
class linkedlist:
  def __init__(self):
    self.head = node()

  def append(self,data):
    new_node = node(data)
    curr = self.head
    while curr.next!=None:
      curr = curr.next
    curr.next = new_node



  def display(self):
    curr = self.head
    dis = []
    while curr.next!= None:
      curr = curr.next
      dis.append(curr.data)
    print(dis)
    dis.reverse()
    print(dis)

  def delete(self):
    curr = self.head
    while (curr.next.next):
      secondlast_node = curr.next
      curr = curr.next
    curr.next = None

  def appendleft(self,data):
    
      new_node = node(data)
      curr = self.head
      self.head = new_node
      new_node.head = curr
    
  def length(self):
    cur = self.head
    total = 0
    while cur.next!=None:
      total+=1
      cur=cur.next
    return total

  def getlen(self, index):
    if index>=self.length():
      return "Index is out of range "
      return None
    cur = self.head
    cur_index=0
    while cur.next!=None:
      cur= cur.next
      if cur_index == index:
        r = cur.data
        cur_index+=1

my_list = linkedlist()

my_list.append(1)
my_list.append(2)
my_list.append(3)
my_list.append(11)
my_list.append(32)

my_list.display()

my_list.length()

my_list.delete()

my_list.display()

my_list.getlen(6)

